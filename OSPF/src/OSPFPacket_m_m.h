//
// Generated file, do not edit! Created by opp_msgtool 6.1 from OSPFPacket_m.msg.
//

#ifndef __OSPF_OSPFPACKET_M_M_H
#define __OSPF_OSPFPACKET_M_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif


namespace ospf {

class DataPacket;

}  // namespace ospf


namespace ospf {

/**
 * Class generated from <tt>OSPFPacket_m.msg:17</tt> by opp_msgtool.
 * <pre>
 * message DataPacket
 * {
 *     int srcId;
 *     int destId;
 *     string payload;
 * }
 * </pre>
 */
class DataPacket : public ::omnetpp::cMessage
{
  protected:
    int srcId = 0;
    int destId = 0;
    ::omnetpp::opp_string payload;

  private:
    void copy(const DataPacket& other);

  protected:
    bool operator==(const DataPacket&) = delete;

  public:
    DataPacket(const char *name=nullptr, short kind=0);
    DataPacket(const DataPacket& other);
    virtual ~DataPacket();
    DataPacket& operator=(const DataPacket& other);
    virtual DataPacket *dup() const override {return new DataPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcId() const;
    virtual void setSrcId(int srcId);

    virtual int getDestId() const;
    virtual void setDestId(int destId);

    virtual const char * getPayload() const;
    virtual void setPayload(const char * payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DataPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DataPacket& obj) {obj.parsimUnpack(b);}


}  // namespace ospf


namespace omnetpp {

template<> inline ospf::DataPacket *fromAnyPtr(any_ptr ptr) { return check_and_cast<ospf::DataPacket*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __OSPF_OSPFPACKET_M_M_H

